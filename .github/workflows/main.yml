name: Build and Deploy Spring Boot to AWS EC2

# main 브랜치에 푸쉬 했을때
on:
  push:
    branches: [ main ]

# 해당 코드에서 사용될 변수 설정
env:
  PROJECT_NAME: cloneAirbnb
  BUCKET_NAME: cloneairbnbs3
  CODE_DEPLOY_APP_NAME: codeDeploy-test
  DEPLOYMENT_GROUP_NAME: codeDeploy-group

jobs:
  build-with-gradle:
    runs-on: ubuntu-20.04
    steps:
      - name: main 브랜치로 이동
        uses: actions/checkout@v3
        with:
          ref: main
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.AWS_PROPERTIES }}" > ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: gradlew에 실행 권한 부여
        run: chmod +x ./gradlew
        
      - name: 프로젝트 빌드
        run: ./gradlew clean build -x test
        
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: S3에 업로드
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
